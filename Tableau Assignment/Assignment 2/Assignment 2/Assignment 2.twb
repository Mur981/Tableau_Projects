<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.21.0311.1758                               -->
<workbook original-version='18.1' source-build='2018.3.29 (20183.21.0311.1758)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore_Canada)' inline='true' name='federated.19fezlz040f2d61b3wqp71xselzh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Canada' name='excel-direct.1qjt753030ace3162c35y0bsj2ze'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/A619478/Desktop/New folder/Inuron BA/Tableau Assignemnt/Assignment 2/Assignment 2/Superstore_Canada.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qjt753030ace3162c35y0bsj2ze' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='integer' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Priority' ordinal='3' />
            <column datatype='integer' name='Order Quantity' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='real' name='Discount' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='real' name='Profit' ordinal='8' />
            <column datatype='real' name='Unit Price' ordinal='9' />
            <column datatype='real' name='Shipping Cost' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Province' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Customer Segment' ordinal='14' />
            <column datatype='string' name='Product Category' ordinal='15' />
            <column datatype='string' name='Product Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='string' name='Product Container' ordinal='18' />
            <column datatype='real' name='Product Base Margin' ordinal='19' />
            <column datatype='date' name='Ship Date' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Quantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U8400:no:A1:U8400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Product Base Margin]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
      <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
      <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Product Base Margin]' derivation='Sum' name='[sum:Product Base Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unit Price]' derivation='Sum' name='[sum:Unit Price:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.522822' measure-ordering='alphabetic' measure-percentage='0.477178' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Order Priority:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not Specified&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Critical&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Order Quantity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Unit Price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Product Base Margin:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Task 2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Task 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Discount to percentage with 2 decimal places'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Discount:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Furniture Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]'>
            <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Jumbo Not Include'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]'>
            <groupfilter from='&quot;Large Box&quot;' function='range' level='[none:Product Container:nk]' to='&quot;Wrap Bag&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk] / [federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Jumbo Shippment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Container:nk]' member='&quot;Jumbo Box&quot;' />
              <groupfilter function='member' level='[none:Product Container:nk]' member='&quot;Jumbo Drum&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk] / [federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Large Box Shipping Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]'>
            <groupfilter function='member' level='[none:Product Container:nk]' member='&quot;Large Box&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</rows>
        <cols>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Medium Box Shipping Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]'>
            <groupfilter function='member' level='[none:Product Container:nk]' member='&quot;Medium Box&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</rows>
        <cols>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Order priority having highest average discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Order Priority:nk]' direction='DESC' using='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Order Priority:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Segment Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk]'>
            <groupfilter function='member' level='[none:Customer Segment:nk]' member='&quot;Corporate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]'>
            <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk]</column>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</rows>
        <cols>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Task 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Product Base Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Base Margin]' derivation='Max' name='[max:Product Base Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Median' name='[med:Unit Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Sum' name='[sum:Unit Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Order Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[max:Product Base Margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[med:Unit Price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Order Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[max:Product Base Margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Unit Price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.19fezlz040f2d61b3wqp71xselzh].[max:Product Base Margin:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]' />
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Sub-Category:nk] / [federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk])</rows>
        <cols>[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Task 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Order Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Order Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Shipping Cost:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]' />
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk] / [federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names])</rows>
        <cols>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Sales&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.19fezlz040f2d61b3wqp71xselzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19fezlz040f2d61b3wqp71xselzh'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19fezlz040f2d61b3wqp71xselzh].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Task 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFF727B1-1CB8-4A75-B676-7D9E29A81A1B}' />
    </window>
    <window class='worksheet' name='Task 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.19fezlz040f2d61b3wqp71xselzh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92E9A32E-F154-4222-8E7A-09245FB2A3EB}' />
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CF7FF51E-CBF4-429D-8215-967A41CD54AC}' />
    </window>
    <window class='worksheet' name='Furniture Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{579E8ED0-B7E4-4F1E-BD40-5F46A30F3C05}' />
    </window>
    <window class='worksheet' name='Segment Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Customer Segment:nk]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9464910A-D5FE-41AF-8573-2417EF6963C8}' />
    </window>
    <window class='worksheet' name=' Discount to percentage with 2 decimal places'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FFE8F6B6-3D1B-4B5C-97E1-FC5F5ABE1356}' />
    </window>
    <window class='worksheet' name='Order priority having highest average discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[avg:Discount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11198839-FCC2-48BB-9611-72B024B17842}' />
    </window>
    <window class='worksheet' name='Large Box Shipping Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E3F72F5-4690-459E-9D5C-5F85B7B5536D}' />
    </window>
    <window class='worksheet' name='Medium Box Shipping Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22DF8477-30DA-4FAF-AC1F-AA925D34C0FE}' />
    </window>
    <window class='worksheet' name='Jumbo Shippment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9FE3CA2-94BA-424F-A368-479CBD75344F}' />
    </window>
    <window class='worksheet' name='Jumbo Not Include'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Product Container:nk]</field>
            <field>[federated.19fezlz040f2d61b3wqp71xselzh].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDAB477-ED9F-4A11-BD8E-FC046F6125F3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='24' name=' Discount to percentage with 2 decimal places' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACHklEQVRYhe2Yv2viYBjHP5VSkA4u4tiltuAgRbQWBCmWjAUXh4J7Jv0nFCRZHLppSwVp
      11ZFOnXoVDo4iVCRiEIlg5lFkZLcUJAL6vXuOO4Vmg9kyPPj5ft8yfsM2bIsy+Ib4xItQDSO
      AaIFiMYxQLQA0TgGiBYgGscA0QJE4xggWoBoHANECxDNRhlwfX1NIpGg3W4DoOs6xWKRVCq1
      iAE8PT0RiUSWnpubm6UzTdPk5eWFVCpFNBrl7OyM+/t7TNMEYPv/jPY1w+GQbrfL8fExAOPx
      GEVRuLi4wOv12molSaLVai3ePz4+KBaLxGKxpXPf3t6o1WoUCgX8fj+j0QhVVQkGgxwcHGyG
      AfP5nLu7O9LpNM1mEwCfz8fl5SUAg8Hgl/2aprGzs8Ph4eFSLhAIoCgKLtfnx763t8fJyQnT
      6RTYkCvw+vqKx+Ph6Ojoj3tN0+Tx8ZF4PL4Y8mdcLpct3uv10DSN/f39z/zfy/43VCoVADKZ
      zMoBvqJUKhGJRAiHw2trZrMZqqrSbDbx+/3kcjl2d3cBwTtgPB7z8PCAruu2eL1et93xdei6
      jmEYi72xCtM0ubq6QpKklSYJNcDn89FoNGyxfD5PMpn8rf7n52dOT09xu91ra/r9PpZlEQqF
      VuY3Ygmuot1uk81mmUwmtrgsy8iyjGEYdDodzs/Pl3rL5fKi9v39ndvbW6rVqq1GURQkSWLL
      +Sv8zfkBDP+82ftOVooAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='44' name='Furniture Sales' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Jumbo Not Include' width='192'>
      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
      E3XOro4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Jumbo Shippment' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABoCAYAAACnk/+EAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARmklEQVR4nO3de1RU1R7A8W+MJI/yxUuUrkb4RHSCESOCFJV84CNREVFRbIlmT4ObmRal
      WWqo5VsRoUgrJbUsCGFEUFJBL0paghqoCSioobzEqfvHDAqEiDLjgGd/1mIt5pwz+5yZOb/Z
      e585e/8e+eeff/5BECTKQN8HIAj6JAJAkDQRAIKkiQAQJE0EgCBpIgAESRMBIEiaCABB0kQA
      CJImAkCQNBEAgqSJABAkTQSAIGkiAARJEwEgSJoIAEHSRAAIkiYCQJA0EQCCpIkAECRNBIAg
      aSIABEkTASBImggAQdJEAAiSJgJAkDQRAIKkNbvbBmlpaQ/iOARBLx4Rk+MKjVlaWhoKhUJn
      5YsmkCBpIgAESRMBIEhaAwIgh0g/BQqF5s/Nk4CFSnJV9X9uSNL9710QtKHBNYDX0jTS0tLY
      H/0RfU6/z6iAr8i510KSQlAoQpBsPOTFEB6Tp+Uiw2lokenhgQQGVv69zBsLwki5UK9vuEal
      rKyMDRs24OHhgbOzMz4+PmRmZgL1uAxaX80texO4bA6ZL3zKlkPjmO0sq/+T3UMQV1sboz7M
      WBeAHIAKrvy2nRVbkrF/qy8t9Xxk92Lr1q2UlpYSHR1Ny5YtSUxMZMOGDSxYsEDLfYAWngz1
      +Iv//aqpA4oOsXyiBy4KBQq3FwmOPkOt3x9JISj8IskBciL9ULwVQ3HlupxI/FxCSFIBqjNE
      B7+Im0KBwsWDicsPUaTeSNOkKuLQcl/cFCEknljFKMUMogsrCyokeoYLb8UUafUlS4chrbs9
      h+PjpZTq+1Duka+vL6+99hqtW7fGwMCA3r17Y2Vlxc2bN7VXA6jJaGYIp8+eB0yJfjuU8pe3
      sc+lDVxWMt83iDCH7wjsfOcSOvT1pMvaPewvHoynKeQkxpE34nVcZSoOL3mVeMe1xC95gubl
      WYRPC2BBXCyLPdXPzdr4HpuHzOPng90xkeWTL99ETHw+3j5WUJhIfPoL+K5sod2XrG3p4XyY
      O4T3BrdVP86L4cOfrHkvQA6kE774CKbNTrPvZAEq406MfKkfV+K+Y9/JAjB/nmnzxuNgBFDC
      6dhVvHv4GAUqY55wmciM8U6YyQBVIYc3r+HLX85RSo11d6AqKyTzp838bjsBL82y4lMxRGz6
      iWMFN3jUvCdDpkxmsJ0pxekRbMz1ZObgdsgoJj1iI7meMxnc7h5aBVrUrNnt0/zvv/8mLi4O
      S0tLTE1NtR0AKm5WwFNP2UDxEVJST7M31ZOtVbbwygPqCAA6DGK4/Vri9xfj6VlAYlweA193
      QsZJDiTlk5r7Iq6htzfvkltw+8HzrxHqY4v6bbbCa5IX65fvINMnELPEeDJHTMFVP5+B9hTB
      k9PnMMrGlBuH1/PxzzmMGT+P0daGXI77lB9+Bwd1m4Xm3UYxb+JMjP6+Qvo3oYQlPsnb/duQ
      F7eWWFNv3v+sG625wm8/rGZtXHverQy6Ww6yJvCg+l8jK5xGvMQrHpptytL55os/6PXKEqZb
      G1KR+wvha74hfU4Acvk4+qWvJebCq/S7uIuT8qn46Onkr+ratWuEhobSs2dPJkyYAGixDwBA
      cQKxypY8PaIDcBKQE/xjGD5W91KIFX0H2rM8fj/FXXKJyxvErFv9iZaMXh1XS/9C3eTqZFd5
      8quZuo9n7PLZ7MkcSauYfMb+1xn9fwwNZOuIs40pAIbtn8C2+9P0sjYCwMLSosqGJth0sMZI
      BshaIx89lH2bzwIqjh2xYNDsbrSWAbSm24hBWHxyjEuD22JRbWdV+gAVxZw/8QMr1+cyY1of
      TLPSOe88kgDNvmXWzzHSWUlcFsgdjHCYOJbzq95jWYsxvDnZVMdvyt1lZ2ezevVqpk+fjq2t
      7a3lWusDlF9MJXJ2KMnyl5niLANTR5zl6YSHfs+5coByrp1KJrUel4isBgxGnpzCtoQ4ikYN
      xQmALvR2hZ2r1pJ+WQWoKMk7zi8nCusoqTMjfdrw7ZpP2I0PI+uqefTp6lWu6HofJSW3+1X3
      w9AUm17jGNDsOFn12b6ikAKsaNEIegwFBQV8+eWXzJkzp9rJD1oIgF2z1L8DuHov5OBTb/Pd
      Sm/UX/hWjJ6/mOcLVjLeVYFCMQDvhbu5XJ9CzQYx/NldrFhditfA7pqFMpxfXsZ0yz3MGtoH
      heI5vF5ZxfFSozqLsvIai9OBZBjYl3uqiHSsrKiICkBVls2u6KPYdNI0LWQG3NCsqyg+z6HY
      X7i/q5k3KS2rAM0+Er7Yi4VjV8CCno6XiN35G1cqgIor/LYzlkuOPWt8+9ekoiw7joRsUx4D
      6CTH5tAO9uWWoUJFWe4+dhyyQd4JoJj07b/SfeprTJWfZGPMhdovfjwgSqUSd3d3WrVq9a91
      D/3NcOVZ4UwL+B2/2MV46r8mvuVS4qd8uCWLG4+a09N7JtP7tlM3z1QXiFu2mB1ZpcjMu/Cc
      ixm/XexFSGUnOBwCAjSN/LwYwv/3NAGVbff0cMIJIEAOeclhbNr9K+fyS8HYCvthLzGt/38w
      hHp3gtPDA1lzsPKRDGMre16YpO7owp06wUZciFlFnPVUJstNARW/b1lASrcgAuT3/gFo42a4
      uXPnEhsbW22ZpaUlERERD3MA5BDp582Ks52YELqON5wb+dUfoVa6vhv0IQ4A4WEgbocWBB0S
      ASBImggAQdK0/EuwUFNJSYm+D6HJ0+V7eN8BkBSiYNaufy/v8mo0X/l3aMgx3ZYTiZ/3HwSm
      heCunRIFoZr7DgD3kDTSQhAnqdCkiT6AIGm6CYCcSPwUISQVHWK5rxuKkCQgiZBqo76qPy46
      Fknwi24oFApcPCay6WSNMlVn+GqqB/7hWZTr5KAFKdJhJziLje9tZsi8nznY3QTqGvCYH83b
      gZux+jCa/QMt4dopLpYAZZr1qjN8Ne0l4tzDCPe3bfp3dAqNhk6vAj3/Wig+tnc/XYuPpJD6
      7BvsHWhJc4DH7XjicTR3Oe9iVp9dmA4JJeZhPfnz44nKcGDCAO3drpcfH0WGwwQaUmRG1JuE
      H1b/LzO2oKvHWHz62fF4E/sQysrK+Prrr9m2bRvXr1+nY8eOzJ07Fzs7O132ATphV4+T/+68
      WKpcSr+DC1mcJIYzPlhOBCxbxrJly/h47mQcL20l9NvjtyrmpmLHjh2UlpYSFRWFUqlkypQp
      REREUF5e/qA7wec5/6cKyi9y/HslxzRLTR2fpXfKcpbsvkg5UH7tFOfyqzythTvzFg7glw8W
      oRQxoBeGJu1w9H2doddj2Zd/9+0bk9GjRzNjxgxatWqFgYEBTk5OWFpa6mJMcF3keIxaxrsj
      +rCmTU8GB/ejM6fVq6y8WbTuOvPf98b1nVIMW3Rj2povmVLlVn+Z0yzWTArA/9VIOob7o5XK
      pTHKiGJJ/kCCK9su+fEs2W1F8AQHIIOoz45i2iybA6cKURnbMmSiG38pd3HgVCGYPcukoDHY
      GwGU8ocyjAXpxylUGdNeMZYpY+S3xgSnb93Et2l/UkqNdXUywbG3OWuyihhg1ULTzBrFEymr
      idz/Dx7BwThkLGG3VTATHGp5PRlRfHbUlGbZBzhVqMLYdggT3f5CuesA6sOfRNAYe+oe4XHv
      ao4JTkhIwNzcXEtjgjv481XNKU1qW0YL3OdsJ3lOlUUDq6zt6c+S7f41nlO1HBm2/pEk19xE
      aq5Bh4BZeLUzoSI9kqUJ5xg5OojhbQ25olxJbBbYa06+Rzt5ETT2JYz+vkrGdyuJ2t+B191b
      k78nggTT4fz348604iqZsRuJ2GPNW/XoMMhkMkrLSoEWgIo/d0dxpu1I3lmk7hvkZ9zt8DsQ
      MMuLdiYVpEcuJeHcSEYHDaet4RWUK2PJwh6Huou4b9evX+fzzz+nR48ejBs3DhC/AzQ9HXvh
      2M4EQ8DEuj0duzrTo60RMmSYW5hV2dCY9k+0VY8JNmyFw4gXMDl7Hijg+FFz+g/pTCtD9brO
      Q/pjfvQ4BbXusDqVSoWxkbHm0TVu2HkzdUD9O8YdeznSzsQQMMG6fUe6OvegrZEMZOZUO3wt
      O3v2LIsWLcLX15fhw4djYKA+9cW9QI1B0VWu6nofpaWUNLhxUcKR1AK6Dq8cXNSKJ580a/RX
      5goLC9myZQtBQUG0bFl9Si9RA+hJ2bVrmjHBZ/n5+19pb6tpfhjIuFGkXldRcoEjylTur8+p
      orS8ckzwWZK+3o9Zr06AOfa9Ckj4KZOrFUDFVTJ/SqCglz3mdZVWlseRLZ/x42ODeK6OlpLM
      wIDrRdfU44QvZxK/r+Yvmg9eUlISrq6u/zr5QdQAenP9aARLos9w41Ez7IcFMqVysoKufXFR
      ruCdN0uRmdnxTO8nsbh0HzswfYRTUe8TdKkUjC3oOsgff/WMWVj1m0z/rZtY/E6VTvCQ2s7q
      w4S/qf4hoPJ3gLf62dVZj5g/40mrpQsI2qbCuH1PBtm1v4+D166MjAzi4+OrLbOwsGDt2rVi
      SKSuiduhG+bEiRN079797hveJ9EEEiRNBIAgaSIABEkTASBImrgKpGMmJib6PoQmT5fvoagB
      BEkTASBImggAQdK0lybVxYPRwd+QpdMBu0mEKPyIvOc0lHdwYhXDFAoU/ZdwWEtFCk2L1tKk
      HkxYyajr65m+7JBe54K/Fyf2xMKUV/EhiQMnqq5JIkTxAPMYizSpeqO1q0Ayk+6M93Vj6ZJU
      TuKM7n681pYcUlNKcJ81gT6X1rIuNYeZ3Ssn9HInRORt5WFJk1oXnfYBig4tZ6KHCwqFArcX
      g4k+o/n2UOWiXDgRDxdN0+nlaYyZr/m6TQrRTKNC7Y+rKIz/gHGebrcy1c/ceEKTBkjTVDpz
      hug3huKiScFaTf4Bkk8+g5Nchr2DnJNxiVW2qd7USgpR4Bd5hjPRbzDURYtNsCal6aZJrYvW
      agDV5XTWbvyZ/wzaSBdQT3USWs7L2/ahzpI6H9+gMBy+C4Swmbx7sj9rfoxA3gay1o/H98J9
      7LTdCBZEz8bu8eaoLm9nlucidgyKxK89QBHKjz6hh/8mEt01s01UUbgvkfTeA1gkAzPFM3T5
      +ABphf50uMOgjCLlR3zSw59Nie5Y1ixMm0Sa1AeqwQGwa5aCXQCGLejmE0rY9O7I0Ex1cnov
      qZ7VkqSSRw5/JJ3FY+p05G3Ub8ijze/vMAxvHmXdlFnsy1bn1IIuON6sXFuCjd+nBLvXlhmm
      mEMpqXR5ZjZmAB1686z1ClIOFeM9uPY0PiU2fnwa7I7e88yINKla1eAA8FqaxjybaN6YsR7j
      Lk/SsurrlAfzY5hPjeR0OfwBGDZr6BtymHVvfsGjQV+TONiS5iQRolhXZX1bOj91h9O1OIn4
      vXByrzeKFVWWxydRPHgwtYVA285P6f/kB5EmVcu00geQ2XqzfM0kChdO5p2YXFSAqaMz8vRw
      Qr8/p57KsPwap5JTycGGbg4tSd65XZ0+tfwi2edrzHVy/jzq2VOO873y2L93CEA5ZSUmmFm3
      pLmqhOzkX+qXvhNQHT5IivUUvkhTX8FKS0vj4OrRtEw5yGF9XOQQaVL1RmudYJmtH+sjx5P/
      4WTmKy+jshrN/MXPU7ByPK4KBYoB3izcfRl1utOPGXZxBWNdFbiNW0JS1dypcg9GFa5hRB83
      hs3eifFTd0ru2we/V9qza4YrLgMDCb9gVOeQvttUHE5JxnxQv2pXqmROHgw0SSblAUWASJPa
      OOhlRFhxbjZXHrPG5vHmqEqy+fYtXxL67iDs3lLKN2kiTWr9PJRZIgvjPyBwYSzZRRXqzvOw
      uSx+2wPrxtlPEvTooQwAQagvkSZVEHRIBIAgaSIABEkTQyJ1TMwL1HC6fA9FDSBImggAQdJE
      AAiSJgJAkDQRAIKkiatAjYFIk6o3IgCEOjgRsGwCDqiTdWTsjCT02+HM9tV+Ijt9EU0goV6a
      cprUuogaoLERaVIfaO0iAqCpEWlStUo0gZoakSZVq0QANAYPLE1qQ2nSpHZqWmlS6yICQE9E
      mtTGQfQB9ESkSW0cxJBIHRO3QzeMSJMqCDr0fwgeewBLwy9cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='Large Box Shipping Cost' width='144'>
      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
    </thumbnail>
    <thumbnail height='104' name='Medium Box Shipping Cost' width='144'>
      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
    </thumbnail>
    <thumbnail height='124' name='Order priority having highest average discount' width='164'>
      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
    </thumbnail>
    <thumbnail height='64' name='Segment Sales' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Task 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Total Sales' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEXUlEQVRYhe2XXyizbRzHvy/vtrID8mcHYiUl/0703O7VDqzWyp8jaQf+pRYlyQHKFElK
      qYVyQMuBpDhQSrRSy58yRpNIYVpSM8wow7hj9+85eLLeteF53+d+vG9v96fuk/2+1++6rk/X
      fW37g4gIIoIR828v4P+GKFRgRKECIwoVGFGowIhCBUYUKjCiUIERhQqMKFRgRKECIwoVGFGo
      wAgu9OXlBVarFY2Njeju7o6aeX19RW9vL8rKyuD1eqNmDg4OoNfrwbIsKioqYLfbQzWe5+Fw
      ONDe3o7Hx8ewcZ2dnWAYJvQYDIaIzBt2ux0VFRVgGAalpaXY3d0N1Ww2G0pKSqBSqdDR0QG/
      3x+qeTweDA0NQa/XY39/P6znnx/r+fvMzMzg8vISra2tsFgsUTM7OzsIBALIzs6OWvf5fDCb
      zejt7UVubi7Ozs5gMpmQmpoKpVKJ1dVVWK1WNDQ0hI0LBAKQSCSwWCxQKBQfrtPpdGJ0dBR9
      fX3Izc3Fzc0NYmJ+nC+Px4OpqSkMDw8jIyMDZrMZk5OTaGlpgdfrxcDAACorK5GcnBzRV3Ch
      dXV1APDuyfP7/Zifn4fBYMDk5GTUjMfjQUFBAfLz8wEAGRkZKC8vx+7uLpRKJbRaLbRabcTJ
      e35+RmxsLORy+afrXFpagl6vD82RkpISqm1vb0OtViMnJwcAUF1dDZPJhLu7OygUCoyMjAAA
      Tk9PI/p++R26uLgIlmWhVCrfzSQkJGBzcxMulwsAwHEcOI6D2+3+sPfDwwPi4uI+FcpxHHw+
      HxiGiVq/u7sLe3uSkpKQnJz87tXxV75M6OvrKwYHB8EwDMrLyz/MKpVKjI+PIzMzEwAgk8kg
      l8shlUo/HdfR0QHgx12+traGpqYm3N7eRqwlGAzi+voaLy8v4Hkey8vLaGtrw9PT0y/s8guF
      Hh8fY3FxEdXV1WAYBhqNBlarFWVlZbBarR+O5XkedrsdWVlZPz2fRCKBRqNBWloaLi4uwmpy
      uRwKhQIymQwSiQQxMTFQqVSQSqW4v79HfHw8jo6OQvmbmxv4fL6fukq+TGheXh5WVlbgcDjg
      cDiwtrYGnU4Hi8UCnU4Xlg0Gg3A6neA4DjzPY3Z2Fm63+91X9I2ZmRnMzc2Fxi0vL+P8/Bzp
      6ekRWZVKhYmJCfh8PvA8j62tLUilUiQmJoJlWWxsbODw8BDPz8+Ynp5Geno64uPjP98oCYzR
      aKRv376FPaWlpXR1dRWWe3h4IKPRGPrc6/VSfX09nZycEBHR2NgYqdVqYlmWDAYDeTye0Fiz
      2RzWv6ioiPb29sjv91N/fz+p1WoqLCyk2tpacrlcREQUCASoubmZbDYbEREFg0FaWFggnU4X
      dY719XUqLi4mlmWpq6uLHh8fiYhob2+PioqKIvZoNpuJiEhwof+U1dVVGhkZoWAw+Fv6Hx4e
      Uk9PD3Ec91v6v/Gf+KfE8zyOj49RVVUV+i0oNPv7+6ipqfn0i+1X+Q5Z27Uys31ZzwAAAABJ
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
